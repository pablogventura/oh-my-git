title = Reordenación de eventos
cards = checkout commit-auto reset-hard rebase-interactive cherry-pick

[description]

Oops, parece que hay algo que se ha estropeado aquí. ¿Puedes volver a poner los eventos en su orden correcto?

Hay dos maneras de hacerlo: Puedes arrastrar la tarjeta "interactive rebase" al commit anterior al que quieres cambiar, luego reordenar las líneas en el archivo que se abre, y guardarlo.

O puede restablecer la etiqueta principal a la primera confirmación, y luego seleccionar confirmaciones individuales en el orden que desee. Tienes tarjetas para ambos enfoques.

[setup]

echo "Acabas de despertar.

NO llevas ropa interior.

NO llevas pantalones.

NO llevas camisa.

NO llevas zapatos." > you
git add .

git commit -m "El comienzo"

echo "Acabas de despertar.

NO llevas ropa interior.

NO llevas pantalones.

NO llevas camisa.

Llevas zapatos." > you
git commit -am "Ponte los zapatos"

echo "Acabas de despertar.

NO llevas ropa interior.

Llevas pantalones.

NO llevas camisa.

Llevas zapatos." > you
git commit -am "Ponte los pantalones"

echo "Acabas de despertar.

Llevas ropa interior.

Llevas pantalones.

NO llevas camisa.

Llevas zapatos." > you
git commit -am "Ponte la ropa interior"

echo "Acabas de despertar.

Llevas ropa interior.

Llevas pantalones.

Llevas una camisa.

Llevas zapatos." > you
git commit -am "Put on shirt"

[win]

# Reordenar los compromisos para vestirse de forma correcta
{ git log main --oneline | perl -0777 -ne'exit(1) if not /zapatos[\s\S]*pantalones[\s\S]*ropa interior/'; } && { test "$(git log main --oneline | wc -l)" -eq 5; }

[congrats]

No dudes en reiniciar el nivel y probar la otra estrategia. ¿Cuál te gusta más?
